// Generated by Dagger (https://dagger.dev).
package com.jnicovm.mercado_libre_prueba.retrofit;

import com.jnicovm.mercado_libre_prueba.data.RemoteSearchDataSource;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class APIModules_RemoteSearchDataSourceProviderFactory implements Factory<RemoteSearchDataSource> {
  private final APIModules module;

  private final Provider<RequestSearch> requestSearchProvider;

  public APIModules_RemoteSearchDataSourceProviderFactory(APIModules module,
      Provider<RequestSearch> requestSearchProvider) {
    this.module = module;
    this.requestSearchProvider = requestSearchProvider;
  }

  @Override
  public RemoteSearchDataSource get() {
    return remoteSearchDataSourceProvider(module, requestSearchProvider.get());
  }

  public static APIModules_RemoteSearchDataSourceProviderFactory create(APIModules module,
      Provider<RequestSearch> requestSearchProvider) {
    return new APIModules_RemoteSearchDataSourceProviderFactory(module, requestSearchProvider);
  }

  public static RemoteSearchDataSource remoteSearchDataSourceProvider(APIModules instance,
      RequestSearch requestSearch) {
    return Preconditions.checkNotNull(instance.remoteSearchDataSourceProvider(requestSearch), "Cannot return null from a non-@Nullable @Provides method");
  }
}
